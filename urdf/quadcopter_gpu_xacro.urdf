<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="M_PI" value="3.14159"/> 
  <xacro:property name="laser_min_range" value="0.1"/>
  <xacro:property name="laser_max_range" value="200.0"/>
  <xacro:property name="horizontal_fov" value="360"/>
  <xacro:property name="vertical_fov" value="180.0"/>
  <xacro:property name="ros_topic" value="scan"/>
  <xacro:property name="samples" value="20000"/>
  <xacro:property name="downsample" value="1"/>

  <xacro:arg name="gpu" default="true"/>

  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.1"/>
    <inertia ixx="0.01" ixy="0" ixz="0"
          iyy="0.01" iyz="0"
          izz="0.01"/>
    </inertia>
  </xacro:macro>
  
  <!-- CPU Based simulation -->
  <xacro:macro name="livox_mid_gazebo_sensor" params="visualize:=False update_rate:=10 resolution:=0.002 noise_mean:=0.0 noise_stddev:=0.01 name:=livox ros_topic:=scan">
    <gazebo reference="${name}">
      <sensor type="ray" name="laser_${name}">
        <pose>0 0 0 0 0 0</pose>
        <visualize>${visualize}</visualize>
        <update_rate>${update_rate}</update_rate>
        <plugin name="gazebo_ros_laser_controller" filename="liblivox_laser.so">
          <ray>
            <scan>
              <horizontal>
                <samples>100</samples>
                <resolution>1</resolution>
                <min_angle>${-horizontal_fov/360*M_PI}</min_angle>
                <max_angle>${horizontal_fov/360*M_PI}</max_angle>
              </horizontal>
              <vertical>
                <samples>50</samples>
                <resolution>1</resolution>
                <min_angle>${-vertical_fov/360*M_PI}</min_angle>
                <max_angle>${vertical_fov/360*M_PI}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${laser_min_range}</min>
              <max>${laser_max_range}</max>
              <resolution>${resolution}</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>${noise_mean}</mean>
              <stddev>${noise_stddev}</stddev>
            </noise>
          </ray>
          <visualize>${visualize}</visualize>
          <samples>${samples}</samples>
          <downsample>${downsample}</downsample>
          <csv_file_name>package://uav_simulator/src/livox_lidar/scan_mode/mid360.csv</csv_file_name>
          <ros_topic>${ros_topic}</ros_topic>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- GPU Based simulation -->
  <xacro:macro name="livox_mid_gazebo_gpu_sensor" params="visualize:=False update_rate:=10 resolution:=0.002 noise_mean:=0.0 noise_stddev:=0.01 name:=livox ros_topic:=scan">
    <gazebo reference="${name}">
      <sensor type="gpu_ray" name="laser_${name}">
        <pose>0 0 0 0 0 0</pose>
        <visualize>${visualize}</visualize>
        <update_rate>${update_rate}</update_rate>
        <sample_sensor>True</sample_sensor>
        <sample_size>${samples}</sample_size>
        <sample_csv_file>package://uav_simulator/src/livox_lidar/scan_mode/mid360.csv</sample_csv_file>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>${-horizontal_fov/360*M_PI}</min_angle>
              <max_angle>${horizontal_fov/360*M_PI}</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>${-vertical_fov/360*M_PI}</min_angle>
              <max_angle>${vertical_fov/360*M_PI}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${laser_min_range}</min>
            <max>${laser_max_range}</max>
            <resolution>${resolution}</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="liblivox_laser_gpu.so">
          <ros_topic>${ros_topic}</ros_topic>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="Livox_Mid360" params="visualize:=False name:=livox gpu_enabled:=$(arg gpu)">
    <!-- Debug print statement for gpu_enabled -->
    <xacro:message>GPU Enabled: ${gpu_enabled}</xacro:message>
    
    <link name="${name}_base">
      <xacro:null_inertial/>
      <!-- <visual> 
        <origin xyz="0.00 0 0.00" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://livox_laser_simulation/meshes/livox_mid360.stl"/>
        </geometry>
      </visual> -->

      <!-- <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://livox_laser_simulation/meshes/livox_mid360.stl"/>
        </geometry>
      </collision> -->
    </link>
    <link name="${name}">
      <xacro:null_inertial/>
    </link>

    <joint name="${name}_to_${name}_base_joint" type="fixed">
      <parent link="${name}_base"/>
      <child link="${name}"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.047"/>
    </joint>
    <xacro:if value="${gpu_enabled}">
      <!-- GPU based simulation -->
      <xacro:livox_mid_gazebo_gpu_sensor name="${name}" visualize="${visualize}" ros_topic="${ros_topic}"/>
    </xacro:if>
    <xacro:unless value="${gpu_enabled}">
      <!-- CPU based simulation -->
      <xacro:livox_mid_gazebo_sensor name="${name}" visualize="${visualize}" ros_topic="${ros_topic}"/>
    </xacro:unless>
  </xacro:macro>
  
  <!-- Main quadcopter body -->
  <link name="base_link">
    <inertial>
      <mass value="1.54"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.1152" ixy="0" ixz="0" iyy="0.1152" iyz="0" izz="0.218"/>
    </inertial>
    <collision name="quadcopter_collision">
      <origin rpy="0 0 0" xyz="0 0 -0.02"/>
      <geometry>
        <mesh filename="package://uav_simulator/urdf/quadcopter/meshes/CERLAB_quadcopter.stl" scale="1.5 1.5 1.5"/>
      </geometry>
    </collision>
    <visual name="quadcopter_visual">
       <origin rpy="0 0 0" xyz="0 0 -0.02"/>
        <geometry>
          <mesh filename="package://uav_simulator/urdf/quadcopter/meshes/CERLAB_quadcopter.dae" scale="1.5 1.5 1.5"/>
        </geometry>
    </visual>
  </link>

  <gazebo reference="quadcopter">
    <material>quadcopter/Diffusion</material>
  </gazebo>

  <gazebo>
    <plugin name='quadcopter_gazebo_plugin' filename='libquadcopterPlugin.so'>
        <bodyName>base_link</bodyName>
        <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
        <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
        <rollpitchLimit>1.0</rollpitchLimit>
        <yawProportionalGain>1.5</yawProportionalGain>
        <yawDifferentialGain>1.0</yawDifferentialGain>
        <yawLimit>1.5</yawLimit>
        <yawAngleProportionalGain>3.0</yawAngleProportionalGain>
        <yawAngleLimit>3.15</yawAngleLimit>
        <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
        <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
        <velocityXYLimit>2</velocityXYLimit>
        <velocityZProportionalGain>5.0</velocityZProportionalGain>
        <velocityZDifferentialGain>0.5</velocityZDifferentialGain>
        <velocityZLimit>-1</velocityZLimit>
        <positionXYProportionalGain>1.2</positionXYProportionalGain>
        <positionXYDifferentialGain>0.1</positionXYDifferentialGain>
        <positionXYIntegralGain>0.0</positionXYIntegralGain>
        <positionXYLimit>-1</positionXYLimit>
        <positionZProportionalGain>1.0</positionZProportionalGain>
        <positionZDifferentialGain>0.2</positionZDifferentialGain>
        <positionZLimit>-1</positionZLimit>
        <accelerationXYProportionalGain>15.0</accelerationXYProportionalGain>
        <accelerationXYDifferentialGain>0.0</accelerationXYDifferentialGain>
        <accelerationXYIntegralGain>0.0</accelerationXYIntegralGain>
        <accelerationXYLimit>-1</accelerationXYLimit>
        <accelerationZProportionalGain>0.5</accelerationZProportionalGain>
        <accelerationZDifferentialGain>0.0</accelerationZDifferentialGain>
        <accelerationZLimit>-1</accelerationZLimit>
        <maxForce>60</maxForce>
        <motionSmallNoise>0.05</motionSmallNoise>
        <motionDriftNoise>0.03</motionDriftNoise>
        <motionDriftNoiseTime>5.0</motionDriftNoiseTime>
    </plugin>
  </gazebo>

  <gazebo reference="base_link">
      <sensor name="camera" type="depth">
          <update_rate>30</update_rate>
          <camera>
            <horizontal_fov>1.047198</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.05</near>
              <far>7.0</far>
            </clip>
          </camera>
          <pose> 0.09 0.0 0.095 0 0 0 </pose>
          <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
            <baseline>0.2</baseline>
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>camera_ir</cameraName>
            <imageTopicName>/camera/color/image_raw</imageTopicName>
            <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
            <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
            <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
            <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
            <frameName>camera_link</frameName>
            <pointCloudCutoff>0.05</pointCloudCutoff>
            <distortionK1>0</distortionK1>
            <distortionK2>0</distortionK2>
            <distortionK3>0</distortionK3>
            <distortionT1>0</distortionT1>
            <distortionT2>0</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
          </plugin>
      </sensor>
  </gazebo>

  <!-- Include the LiDAR sensor based on the gpu argument -->
  <xacro:Livox_Mid360 name="livox" gpu_enabled="${gpu}"/>

</robot>
